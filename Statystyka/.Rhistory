procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta$wynik),
procent = prop.table(table(ankieta$wynik))))
View(ankieta)
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[,"szkola"]=='p'),
data.frame(cbind(liczebnosc = table(ankieta[,"szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[,"szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[,"szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankeita[ankieta["wynik","szkola"]=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[ankieta["wynik","szkola"]=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[,"szkola"]=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik",ankieta["szkoła"]=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkoła"=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta["wynik","szkoła"=='p']),
procent = prop.table(table(ankieta$wynik))))
typeof(ankieta)
data.frame(cbind(liczebnosc = table(ankieta["wynik",ankieta$szkoła=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[3,ankieta$szkoła=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[[3],ankieta$szkoła=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[ankieta[3],ankieta$szkoła=='p',]),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[ankieta$wynik,ankieta$szkoła=='p',]),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta[ankieta$wynik,ankieta$szkoła=='p']),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta$wynik,ankieta$szkoła=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(cbind(ankieta$wynik,ankieta$szkoła=='p'),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(cbind(ankieta$wynik,ankieta$szkoła=='p'),
procent = prop.table(table(ankieta$wynik)))))
data.frame(cbind(liczebnosc = table(cbind(ankieta$wynik,ankieta$szkoła=='p')),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(rbind(ankieta$wynik,ankieta$szkoła=='p')),
procent = prop.table(table(ankieta$wynik))))
install.packages("rlist")
library(rlist)
data.frame(cbind(liczebnosc = table(ankieta.which(wynik,"p" %in% szkola)),
procent = prop.table(table(ankieta$wynik))))
typeof(ankieta$szkola[1])
typeof(ankieta$szkola)
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 %in% szkola)),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 == szkola)),
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 == szkola)),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 == szkola)),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 == szkola)),
procent = prop.table(table(ankieta.which(wynik, 1 == szkola))))
#b
procent = prop.table(table(ankieta.which(wynik, 1 == szkola))))
data.frame(cbind(liczebnosc = table(ankieta.which(wynik, 1 == szkola)),
procent = prop.table(table(ankieta.which(wynik, 1 == szkola)))))
data.frame(cbind(liczebnosc = table(wankieta$wynik),
procent = prop.table(table(ankieta$wynik))))
data.frame(cbind(liczebnosc = table(ankieta$wynik),
procent = prop.table(table(ankieta$wynik))))
ankieta[wynik,szkola==p]
ankieta[ankieta$wynik,ankieta$szkola==p]
ankieta[ankieta$wynik,ankieta$szkola=="p"]
ankieta[ankieta$wynik,ankieta$szkola=='p']
ankieta[ankieta$wynik]
ankieta[ankieta$wynik==1]
ankieta[ankieta$wynik==2]
ankieta[ankieta$wynik==3]
ankieta[ankieta$wynik==4]
ankieta[ankieta$wynik=="d"]
ankieta$wynik=="d"]
ankieta$wynik=="d"
ankieta[ankieta$wynik=="d",]
ankieta[ankieta$wynik=="d",ankieta$wynik]
ankieta$wynik[ankieta$wynik=="d",]
ankieta$wynik[ankieta$wynik=="d"]
ankieta$wynik[ankieta$szkola=="p"]
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola="p"]))))
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p"]))))
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p"])),2))
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p"]),2)))
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p"]))))
barplot(table(ankieta$wynik), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(prop.table(ankieta$wynik), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(prop.table(ankieta$wynik), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(prop.table(table(ankieta$wynik)), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
#e
pie(table(ankieta$wynik))
barplot(table(ankieta$wynik), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE)
barplot(table(ankieta$wynik[ankieta$plec=="k"]), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(table(ankieta$wynik[ankieta$plec=="k"]), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(table(ankieta$wynik[ankieta$plec=="m"]), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE)
centrala <- read.csv("Centrala.RData",header = TRUE)
View(centrala)
centrala <- load("Centrala.RData")
View(Centrala)
View(Centrala)
data.frame(cbind(liczebnosc = table(Centrala$Liczba),
procent = prop.table(table(Centrala$Liczba))))
barplot(table(Centrala$Liczba), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5)
barplot(table(Centrala$Liczba), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:6)
barplot(prob.table(table(Centrala$Liczba)), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:6)
barplot(prob.table(table(Centrala$Liczba)), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:6)
barplot(prop.table(table(Centrala$Liczba)), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:6)
pie(Centrala$Liczba)
pie(table(Centrala$Liczba))
mean(Centrala$Liczba)
#mediana
median(Centrala$Liczba)
sd(Centrala$Liczba)
#wspolczinik zmiennosci
sd(Centrala$Liczba)/mean(Centrala$Liczba)*100
dane <- c(0.9,6.2,2.1,4.1,7.3,1.0,4.6,6.4,3.8,5.0,2.7,9.2,5.9,7.4,3.0,4.9,8.2,5.0,1.2,10.1,12.2,2.8,5.9,8.2,0.5)
dane <- c(0.9,6.2,2.1,4.1,7.3,1.0,4.6,6.4,3.8,5.0,2.7,9.2,5.9,7.4,3.0,4.9,8.2,5.0,1.2,10.1,12.2,2.8,5.9,8.2,0.5)
data.frame(cbind(liczebnosc=table(cut(dane,breaks = seq(0,14,2))),
procent=prop.table(table(cut(dane,breaks = seq(0,14,2)))))
data.frame(cbind(liczebnosc=table(cut(dane,breaks = seq(0,14,2))),
procent=prop.table(table(cut(dane,breaks = seq(0,14,2))))))
data.frame(cbind(liczebnosc=table(cut(dane, breaks = seq(0,14,2))),
procent=prop.table(table(cut(dane, breaks = seq(0,14,2))))))
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
rug(jitter(dane))
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
lines(density(dane),col="red")
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
lines(density(dane),col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
lines(density(dane),col="red",lwd=5)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
lines(density(dane),col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru")
lines(density(dane), col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru",probability = True)
lines(density(dane), col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru",probability = TRUE)
lines(density(dane), col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru",probability = TRUE, col ="lighblue1" )
lines(density(dane), col="red",lwd=2)
hist(dane,xlab = "Średnia predkość wiatru", main = "rozkład empiryczny średniej szybkości wiatru",probability = TRUE, col ="lightblue1" )
lines(density(dane), col="red",lwd=2)
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p"]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p"]))))
data.frame(cbind(liczebnosc = table(ankieta$wynik[ankieta$szkola=="p",]),
procent = prop.table(table(ankieta$wynik[ankieta$szkola=="p",]))))
boxplot(dane, ylab = "Średnia predkość wiatru" , main="rozkład empiryczny średniej szybkości wiatru")
#srednia
mean(dane)
#mediana
median(dane)
#sd - odczhylenie standartowe
sd(dane)
#wspolczinik zmiennosci
sd(dane)/mean(dane)*100
library(e1071)
install.packages("e1071")
library(e1071)
#srednia
mean(dane)
#mediana
median(dane)
#sd - odczhylenie standartowe
sd(dane)
#wspolczinik zmiennosci
sd(dane)/mean(dane)*100
#pakiet potrzebny
#install.packages("e1071")
#library(e1071)
#współczynik asymetri
skewness(dane)
# kurtoza średniej szybkości wiatru
kurtosis(dane)
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
return(sd(x)/mean(x)*100)
}
wspolczynnik_zmiennosci(c(1,3))
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
if (na.rm){
return(sd(x)/mean(x)*100)
}
else{
return("NA")
}
}
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
if (na.rm){
return(sd(x)/mean(x)*100)
}
else{
if (any(x==is.NA))
return("NA")
}
}
wspolczynnik_zmiennosci(c(1,NA,3))
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
if (na.rm){
return(sd(x)/mean(x)*100)
}
else{
if (any(x.NA))
return("NA")
}
}
wspolczynnik_zmiennosci(c(1,NA,3))
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
if (na.rm){
return(sd(x)/mean(x)*100)
}
else{
if (any(is.na(x)))
return("NA")
}
}
wspolczynnik_zmiennosci(c(1,NA,3))
wspolczynnik_zmiennosci <-  function(x,na.rm=FALSE){
if (na.rm){
return(sd(x)/mean(x)*100)
}
else{
if (any(is.na(x)))
return("NA")
else
{return(sd(x)/mean(x)*100)}
}
}
wspolczynnik_zmiennosci(c(1,3))
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE)
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE)
legend(ankieta$wynik)
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE,legend.text = "")
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE,legend.text = ankieta$wynik)
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE,legend.text = table(ankieta$wynik))
barplot(table(ankieta$wynik,ankieta$plec), xlab="Odpowiedzi",ylab = "Liczebnosc",main = "Rozkład empiryczny zmiennej wynik",col = 1:5,beside=TRUE,legend.text= c("a","b","c","d","e"))
Centrala
Centrala <- load("Centrala.RData")
load("Centrala.RData")
load("Centrala.RData")
rm centrala
remove(centrala)
install.packages("EnvStats")
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
load(url("http://ls.home.amu.edu.pl/data_sets/Centrala.RData"))
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
m <- 200
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
est <- mean(Centrala$Liczba)
p_est <- mean(Centrala$Liczba)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
est <- mean(Centrala$Liczba)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
remove(p_est)
remove(probs)
text <- pbinom(Centrala$Liczba,m)
text <- pbinom(Centrala$Liczba,m,prob=(mean(Centrala$Liczba)/m))
remove(text)
es2t <- mean(Centrala$Liczba)/m
(p_est <- mean((Centrala$Liczba) / m)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
p_est <- mean((Centrala$Liczba)/m)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
test <- pbinom(Centrala$Liczba, size=m,prob=p_est)
sum(test)
remove(test)
counts <- matrix(c(prop.table(table(Centrala$Liczba)), probs), nrow = 2, byrow = TRUE)
rownames(counts) <- c("empiryczny", "teoretyczny")
colnames(counts) <- sort(unique(Centrala$Liczba))
counts
barplot(counts, col=c("red","blue"),legend=rownames(counts),beside = T)
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "binom",
param.list = list(size = m, prob = p_est),
add.line = TRUE)
p_est <- mean((Centrala$Liczba)/m)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = sum(probs)) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
qqplot(rbinom(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qbinom(probs, size = m, prob = p_est) })
pp <- mean(Centrala$Liczba<4)
sum(probs)
1-pbinom(Centrala$Liczba<4,size = m,prob =sum(probs) )
1 - pbinom(Centrala$Liczba<4,size = m,prob =sum(probs) )
1 - pbinom(Centrala$Liczba<4,size = m,prob =p_est )
1 - pbinom(Centrala$Liczba<4,size = m,prob =est )
1 - pbinom(Centrala$Liczba<4,size = m,prob = est )
sum(probs)
1 - pbinom(Centrala$Liczba<4,size = m,prob = sum(probs)
)
1 - pbinom((Centrala$Liczba<4),size = m,prob = sum(probs)
)
1 - pbinom((Centrala$Liczba<4),size = m)
1 - pbinom(4,size = m,prob=sum(probs))
1 - pbinom(4,size = m,prob=p_est)
1 - pbinom(4,size = m,prob=est)
tp <- sum(probs)
1 - pbinom(4,size = m,prob=tp)
1 - pbinom(Centrala$Liczba<4,size = m,prob=tp)
1 - pbinom(Centrala$Liczba,size = m,prob=tp)
tpp <-mean(Centrala$Liczba<4)/m)
tpp <-mean((Centrala$Liczba<4)/m)
1 - pbinom(,size = m,prob=tpp)
1 - pbinom(4,size = m,prob=tpp)
1 - pbinom(Centrala$Liczba<4,size = m,prob=tpp)
1 - pbinom(Centrala$Liczba,size = m,prob=tpp)
tpp <-mean((Centrala$Liczba<=4)/m)
probss <- dbinom(sort(unique(Centrala$Liczba<=4)), size = m, prob = p_est)
tps <- sum(probs)
tpp <-mean((Centrala$Liczba<=4)/m)
probss <- dbinom(sort(unique(Centrala$Liczba<=4)), size = m, prob = tpp)
tps <- sum(probs)
tpp <-mean((Centrala$Liczba<=4)/m)
probss <- dbinom(sort(unique(Centrala$Liczba<=4)), size = m, prob = tpp)
tps <- sum(probs)
p_est <- mean((Centrala$Liczba)/m)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
tp <- sum(probs)
probs <- dbinom(Centrala$Liczba), size = m, prob = p_est)
sum(probs)
probs <- dbinom((Centrala$Liczba), size = m, prob = p_est)
sum(probs)
probs <- dbinom(sort(Centrala$Liczba), size = m, prob = p_est)
sum(probs)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = est)
sum(probs)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
counts <- matrix(c(prop.table(table(Centrala$Liczba)), probs), nrow = 2, byrow = TRUE)
rownames(counts) <- c("empiryczny", "teoretyczny")
colnames(counts) <- sort(unique(Centrala$Liczba))
counts
View(Centrala)
m <- 200
est <- mean(Centrala$Liczba)
p_est <- mean((Centrala$Liczba)/m)
probs <- dbinom(sort(unique(Centrala$Liczba)), size = m, prob = p_est)
sum(probs)
probs <- dpois(sort(unique(Centrala$Liczba)), lambda = est)
sum(probs)
data.frame(cbind(liczebnosc = table(Centrala$Liczba),
procent = prop.table(table(Centrala$Liczba))))
#model teoretyczny
counts <- matrix(c(prop.table(table(Centrala$Liczba)), probs), nrow = 2, byrow = TRUE)
rownames(counts) <- c("empiryczny", "teoretyczny")
colnames(counts) <- sort(unique(Centrala$Liczba))
counts
barplot(counts, col=c("red","blue"),legend=rownames(counts),beside = T)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "binom",
param.list = list(size = m, prob = p_est),
add.line = TRUE)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "binom",
param.list = list(size = m, prob = p_est),
add.line = TRUE)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "pois",
param.list = list(size = m, prob =est),
add.line = TRUE)
data.frame(cbind(liczebnosc = table(Centrala$Liczba),
procent = prop.table(table(Centrala$Liczba))))
counts <- matrix(c(prop.table(table(Centrala$Liczba)), probs), nrow = 2, byrow = TRUE)
rownames(counts) <- c("empiryczny", "teoretyczny")
colnames(counts) <- sort(unique(Centrala$Liczba))
counts
counts <- matrix(c(prop.table(table(Centrala$Liczba)), probs), nrow = 2, byrow = TRUE)
rownames(counts) <- c("empiryczny", "teoretyczny")
colnames(counts) <- sort(unique(Centrala$Liczba))
counts
barplot(counts, col=c("red","blue"),legend=rownames(counts),beside = T)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "binom",
param.list = list(size = m, prob =est),
add.line = TRUE)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "binom",
param.list = list(size = m, prob =est),
add.line = TRUE)
library(EnvStats)
EnvStats::qqPlot(Centrala$Liczba,
distribution = "pois",
param.list = list(size = m, prob =est),
add.line = TRUE)
qqplot(rpois(length(Centrala$Liczba), size = m, prob = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qpois(probs, size = m, prob = p_est) })
qqplot(rpois(length(Centrala$Liczba), lambda = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qpois(probs, size = m, prob = p_est) })
qqplot(rpois(length(Centrala$Liczba), lambda = p_est), Centrala$Liczba)
qqline(Centrala$Liczba, distribution = function(probs) { qpois(probs,lambda =  p_est) })
spotify <- read_csv("testowy/spotify.csv")
setwd("D:/Kuby/Statistics/Statystyka")
spotify <- read_csv("testowy/spotify.csv")
spotify <- read.csv("testowy/spotify.csv")
spotify2 <-  spotify[,1:9]
attach(spotify2)
model_1 <- lm(valence ~ ., data = spotify2)
model_1
summary(model_1)
model2 <- step(model_1)
summary(model2
summary(model2)
summary(model2)
weight <- read.csv("testowy/weight.csv")
weight <- read.csv("testowy/weight-height.csv")
View(weight)
height_m <-  weight$Gender=Male
height_w <-  weight$Gender=Female
height_m <-  weight[weight$Gender=Male,"Height"]
height_m <-  weight[weight$Gender=="Male","Height"]
height_w <-  weight[weight$Gender=="Female","Height"]
shapiro.test(height_m)
shapiro.test(height_w)
t.test(height_m,height_w, alternative = "greater", paired = FALSE)
spotify <- read.csv("testowy/spotify.csv")
var(spotify2)
spoti_scale <- scale(spotify2)
pca <- prcomp(spoti_scale)
pca
summary(pca)
# zad 5 -------------------------------------------------------------------
computers <- read.csv("testowy/computers.csv")
comp14 <- computers[computers$screen==14,]
prop.table(comp14)
prop.table(comp14$ram)
prop.table(table(comp14$ram))
